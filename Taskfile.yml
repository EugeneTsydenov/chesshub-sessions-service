version: '3'

tasks:
  run:local:
    cmd: docker-compose -f docker-compose.local.yml up app
    desc: "Start auto compile watching with local env"

  run:dev:
    cmd: air
    desc: "Start auto compile watching with dev env"

  run:prod:
    env:
      GO_ENV: "production"
    cmd: air
    desc: "Start auto compile watching with prod env"

  run:db:
    cmd: docker-compose -f docker-compose.local.yml up db

  run:adminer:
    cmd: docker-compose -f docker-compose.local.yml up adminer

  test:
    cmd: go test ./...
    desc: "Run tests"

  migrate:up:
    cmd: migrate -path=internal/infra/data/migrations -database "postgresql://postgres:postgres@localhost:5432/chesshub?sslmode=disable" -verbose up
    desc: "Run up migration"

  migrate:down:
    cmd: migrate -path=internal/infra/data/migrations -database "postgresql://postgres:postgres@localhost:5432/chesshub?sslmode=disable" -verbose down
    desc: "Run down migration"

  migrate:generate:
    vars:
      NAME: '{{.NAME | default "migration"}}'
    cmds:
      - migrate create -ext=sql -dir=internal/infra/data/migrations -seq "{{.NAME}}"
    desc: "Generate migration file with a name"

  protoc:
    cmd:
      "protoc \
      --go_out=internal/presentation/grpc/generated/sessions \
      --go_opt=paths=source_relative \
      --go-grpc_out=internal/presentation/grpc/generated/sessions \
      --go-grpc_opt=paths=source_relative \
      --proto_path=api \
      sessions.proto"

  lint:
    cmd: golangci-lint run
    desc: "Run linter"

  lint:fmt:
    cmd: golangci-lint fmt
    desc: "Run fixing lint errors"