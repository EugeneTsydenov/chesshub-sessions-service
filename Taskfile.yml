version: '3'

tasks:
  run:local:
    cmd: docker-compose -f docker-compose.local.yml up app
    desc: "Start auto compile watching with local env"

  run:dev:
    cmd: air
    desc: "Start auto compile watching with dev env"

  run:prod:
    env:
      GO_ENV: "production"
    cmd: air
    desc: "Start auto compile watching with prod env"

  run:redis:
    cmd: docker-compose -f docker-compose.local.yml up redis

  run:redis-insight:
    cmd: docker-compose -f docker-compose.local.yml up redis-insight

  run:db:
    cmd: docker-compose -f docker-compose.local.yml up db

  run:adminer:
    cmd: docker-compose -f docker-compose.local.yml up adminer

  test:
    cmd: go test ./...
    desc: "Run tests"

  migrate:up:
    cmd: migrate -path=internal/infrastructure/data/postgres/migrations -database "postgresql://postgres:postgres@localhost:9432/chesshub?sslmode=disable" -verbose up
    desc: "Run up migration"

  migrate:down:
      cmd: migrate -path=internal/infrastructure/data/postgres/migrations -database "postgresql://postgres:postgres@localhost:9432/chesshub?sslmode=disable" -verbose down
      desc: "Run down migration"

  migrate:generate:
    vars:
      NAME: '{{.NAME | default "migration"}}'
    cmds:
      - migrate create -ext=sql -dir=internal/infrastructure/data/postgres/migrations -seq "{{.NAME}}"
    desc: "Generate migration file with a name"

  protoc:
    cmd:
      "protoc  \
       -I=api  \
       -I=${GOPATH}/pkg/mod/github.com/envoyproxy/protoc-gen-validate@v1.2.1  \
       --go_out=internal/controllers/grpccontroller/genproto   \
       --go_opt=paths=source_relative  \
       --go-grpc_out=internal/controllers/grpccontroller/genproto   \
       --go-grpc_opt=paths=source_relative  \
       --validate_out=paths=source_relative,lang=go:internal/controllers/grpccontroller/genproto \
       --experimental_allow_proto3_optional \
       api/sessions.proto
      "
  lint:
    cmd: golangci-lint run
    desc: "Run linter"

  lint:fmt:
    cmd: golangci-lint fmt
    desc: "Run fixing lint errors"