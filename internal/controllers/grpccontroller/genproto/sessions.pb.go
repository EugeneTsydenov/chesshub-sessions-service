// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: sessions.proto

package sessionsproto

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceType int32

const (
	DeviceType_Web     DeviceType = 0
	DeviceType_Mobile  DeviceType = 1
	DeviceType_Desktop DeviceType = 2
	DeviceType_Tablet  DeviceType = 3
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "Web",
		1: "Mobile",
		2: "Desktop",
		3: "Tablet",
	}
	DeviceType_value = map[string]int32{
		"Web":     0,
		"Mobile":  1,
		"Desktop": 2,
		"Tablet":  3,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_sessions_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_sessions_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{0}
}

type AppType int32

const (
	AppType_ChesshubWeb     AppType = 0
	AppType_ChesshubMobile  AppType = 1
	AppType_ChesshubDesktop AppType = 2
	AppType_ChesshubTablet  AppType = 3
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "ChesshubWeb",
		1: "ChesshubMobile",
		2: "ChesshubDesktop",
		3: "ChesshubTablet",
	}
	AppType_value = map[string]int32{
		"ChesshubWeb":     0,
		"ChesshubMobile":  1,
		"ChesshubDesktop": 2,
		"ChesshubTablet":  3,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_sessions_proto_enumTypes[1].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_sessions_proto_enumTypes[1]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{1}
}

type StartSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DeviceInfo    *DeviceInfo            `protobuf:"bytes,4,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSessionRequest) Reset() {
	*x = StartSessionRequest{}
	mi := &file_sessions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSessionRequest) ProtoMessage() {}

func (x *StartSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSessionRequest.ProtoReflect.Descriptor instead.
func (*StartSessionRequest) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{0}
}

func (x *StartSessionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StartSessionRequest) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceType    DeviceType             `protobuf:"varint,1,opt,name=deviceType,proto3,enum=sessions.DeviceType" json:"deviceType,omitempty"`
	DeviceName    *string                `protobuf:"bytes,2,opt,name=deviceName,proto3,oneof" json:"deviceName,omitempty"`
	AppType       AppType                `protobuf:"varint,3,opt,name=appType,proto3,enum=sessions.AppType" json:"appType,omitempty"`
	AppVersion    string                 `protobuf:"bytes,4,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Os            string                 `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion     *string                `protobuf:"bytes,6,opt,name=osVersion,proto3,oneof" json:"osVersion,omitempty"`
	DeviceModel   *string                `protobuf:"bytes,7,opt,name=deviceModel,proto3,oneof" json:"deviceModel,omitempty"`
	IpAddr        string                 `protobuf:"bytes,8,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_sessions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceInfo) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_Web
}

func (x *DeviceInfo) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *DeviceInfo) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_ChesshubWeb
}

func (x *DeviceInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *DeviceInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DeviceInfo) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *DeviceInfo) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *DeviceInfo) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

type StartSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSessionResponse) Reset() {
	*x = StartSessionResponse{}
	mi := &file_sessions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSessionResponse) ProtoMessage() {}

func (x *StartSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSessionResponse.ProtoReflect.Descriptor instead.
func (*StartSessionResponse) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{2}
}

func (x *StartSessionResponse) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *StartSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSessionRequest) Reset() {
	*x = StopSessionRequest{}
	mi := &file_sessions_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionRequest) ProtoMessage() {}

func (x *StopSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionRequest.ProtoReflect.Descriptor instead.
func (*StopSessionRequest) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{3}
}

func (x *StopSessionRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type StopSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopSessionResponse) Reset() {
	*x = StopSessionResponse{}
	mi := &file_sessions_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopSessionResponse) ProtoMessage() {}

func (x *StopSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopSessionResponse.ProtoReflect.Descriptor instead.
func (*StopSessionResponse) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{4}
}

func (x *StopSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListSessionsRequest struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	Filter        *ListSessionsRequest_Filter `protobuf:"bytes,1,opt,name=filter,proto3" json:"filter,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	mi := &file_sessions_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{5}
}

func (x *ListSessionsRequest) GetFilter() *ListSessionsRequest_Filter {
	if x != nil {
		return x.Filter
	}
	return nil
}

type ListSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sessions      []*Session             `protobuf:"bytes,1,rep,name=sessions,proto3" json:"sessions,omitempty"`
	Count         int32                  `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	mi := &file_sessions_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{6}
}

func (x *ListSessionsResponse) GetSessions() []*Session {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *ListSessionsResponse) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ListSessionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Session struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID        int64                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	DeviceType    DeviceType             `protobuf:"varint,3,opt,name=deviceType,proto3,enum=sessions.DeviceType" json:"deviceType,omitempty"`
	DeviceName    *string                `protobuf:"bytes,4,opt,name=deviceName,proto3,oneof" json:"deviceName,omitempty"`
	AppType       AppType                `protobuf:"varint,5,opt,name=appType,proto3,enum=sessions.AppType" json:"appType,omitempty"`
	AppVersion    string                 `protobuf:"bytes,6,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Os            string                 `protobuf:"bytes,7,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion     *string                `protobuf:"bytes,8,opt,name=osVersion,proto3,oneof" json:"osVersion,omitempty"`
	DeviceModel   *string                `protobuf:"bytes,9,opt,name=deviceModel,proto3,oneof" json:"deviceModel,omitempty"`
	IpAddr        string                 `protobuf:"bytes,10,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	City          *string                `protobuf:"bytes,11,opt,name=city,proto3,oneof" json:"city,omitempty"`
	Country       *string                `protobuf:"bytes,12,opt,name=country,proto3,oneof" json:"country,omitempty"`
	IsActive      bool                   `protobuf:"varint,13,opt,name=isActive,proto3" json:"isActive,omitempty"`
	Lifetime      *duration.Duration     `protobuf:"bytes,14,opt,name=lifetime,proto3" json:"lifetime,omitempty"`
	LastActiveAt  *timestamp.Timestamp   `protobuf:"bytes,15,opt,name=lastActiveAt,proto3" json:"lastActiveAt,omitempty"`
	UpdatedAt     *timestamp.Timestamp   `protobuf:"bytes,16,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	CreatedAt     *timestamp.Timestamp   `protobuf:"bytes,17,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_sessions_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{7}
}

func (x *Session) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Session) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Session) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_Web
}

func (x *Session) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *Session) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_ChesshubWeb
}

func (x *Session) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *Session) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Session) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *Session) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *Session) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

func (x *Session) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Session) GetCountry() string {
	if x != nil && x.Country != nil {
		return *x.Country
	}
	return ""
}

func (x *Session) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *Session) GetLifetime() *duration.Duration {
	if x != nil {
		return x.Lifetime
	}
	return nil
}

func (x *Session) GetLastActiveAt() *timestamp.Timestamp {
	if x != nil {
		return x.LastActiveAt
	}
	return nil
}

func (x *Session) GetUpdatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Session) GetCreatedAt() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type GetSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionRequest) Reset() {
	*x = GetSessionRequest{}
	mi := &file_sessions_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionRequest) ProtoMessage() {}

func (x *GetSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionRequest.ProtoReflect.Descriptor instead.
func (*GetSessionRequest) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{8}
}

func (x *GetSessionRequest) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

type GetSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Session       *Session               `protobuf:"bytes,1,opt,name=session,proto3" json:"session,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSessionResponse) Reset() {
	*x = GetSessionResponse{}
	mi := &file_sessions_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionResponse) ProtoMessage() {}

func (x *GetSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionResponse.ProtoReflect.Descriptor instead.
func (*GetSessionResponse) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{9}
}

func (x *GetSessionResponse) GetSession() *Session {
	if x != nil {
		return x.Session
	}
	return nil
}

func (x *GetSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type StopAllSessionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserID        int64                  `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopAllSessionsRequest) Reset() {
	*x = StopAllSessionsRequest{}
	mi := &file_sessions_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopAllSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAllSessionsRequest) ProtoMessage() {}

func (x *StopAllSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAllSessionsRequest.ProtoReflect.Descriptor instead.
func (*StopAllSessionsRequest) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{10}
}

func (x *StopAllSessionsRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type StopAllSessionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopAllSessionsResponse) Reset() {
	*x = StopAllSessionsResponse{}
	mi := &file_sessions_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopAllSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopAllSessionsResponse) ProtoMessage() {}

func (x *StopAllSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopAllSessionsResponse.ProtoReflect.Descriptor instead.
func (*StopAllSessionsResponse) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{11}
}

func (x *StopAllSessionsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListSessionsRequest_Filter struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	UserID           *int64                 `protobuf:"varint,1,opt,name=userID,proto3,oneof" json:"userID,omitempty"`
	OnlyActive       *bool                  `protobuf:"varint,2,opt,name=onlyActive,proto3,oneof" json:"onlyActive,omitempty"`
	DeviceType       *DeviceType            `protobuf:"varint,3,opt,name=deviceType,proto3,enum=sessions.DeviceType,oneof" json:"deviceType,omitempty"`
	DeviceName       *string                `protobuf:"bytes,4,opt,name=deviceName,proto3,oneof" json:"deviceName,omitempty"`
	AppType          *AppType               `protobuf:"varint,5,opt,name=appType,proto3,enum=sessions.AppType,oneof" json:"appType,omitempty"`
	AppVersion       *string                `protobuf:"bytes,6,opt,name=appVersion,proto3,oneof" json:"appVersion,omitempty"`
	Os               *string                `protobuf:"bytes,7,opt,name=os,proto3,oneof" json:"os,omitempty"`
	OsVersion        *string                `protobuf:"bytes,8,opt,name=osVersion,proto3,oneof" json:"osVersion,omitempty"`
	DeviceModel      *string                `protobuf:"bytes,9,opt,name=deviceModel,proto3,oneof" json:"deviceModel,omitempty"`
	IpAddr           *string                `protobuf:"bytes,10,opt,name=ipAddr,proto3,oneof" json:"ipAddr,omitempty"`
	LastActiveBefore *timestamp.Timestamp   `protobuf:"bytes,11,opt,name=lastActiveBefore,proto3,oneof" json:"lastActiveBefore,omitempty"`
	LastActiveAfter  *timestamp.Timestamp   `protobuf:"bytes,12,opt,name=lastActiveAfter,proto3,oneof" json:"lastActiveAfter,omitempty"`
	UpdatedBefore    *timestamp.Timestamp   `protobuf:"bytes,13,opt,name=updatedBefore,proto3,oneof" json:"updatedBefore,omitempty"`
	UpdatedAfter     *timestamp.Timestamp   `protobuf:"bytes,14,opt,name=updatedAfter,proto3,oneof" json:"updatedAfter,omitempty"`
	CreatedBefore    *timestamp.Timestamp   `protobuf:"bytes,15,opt,name=createdBefore,proto3,oneof" json:"createdBefore,omitempty"`
	CreatedAfter     *timestamp.Timestamp   `protobuf:"bytes,16,opt,name=createdAfter,proto3,oneof" json:"createdAfter,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListSessionsRequest_Filter) Reset() {
	*x = ListSessionsRequest_Filter{}
	mi := &file_sessions_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListSessionsRequest_Filter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest_Filter) ProtoMessage() {}

func (x *ListSessionsRequest_Filter) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest_Filter.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest_Filter) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{5, 0}
}

func (x *ListSessionsRequest_Filter) GetUserID() int64 {
	if x != nil && x.UserID != nil {
		return *x.UserID
	}
	return 0
}

func (x *ListSessionsRequest_Filter) GetOnlyActive() bool {
	if x != nil && x.OnlyActive != nil {
		return *x.OnlyActive
	}
	return false
}

func (x *ListSessionsRequest_Filter) GetDeviceType() DeviceType {
	if x != nil && x.DeviceType != nil {
		return *x.DeviceType
	}
	return DeviceType_Web
}

func (x *ListSessionsRequest_Filter) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *ListSessionsRequest_Filter) GetAppType() AppType {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return AppType_ChesshubWeb
}

func (x *ListSessionsRequest_Filter) GetAppVersion() string {
	if x != nil && x.AppVersion != nil {
		return *x.AppVersion
	}
	return ""
}

func (x *ListSessionsRequest_Filter) GetOs() string {
	if x != nil && x.Os != nil {
		return *x.Os
	}
	return ""
}

func (x *ListSessionsRequest_Filter) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *ListSessionsRequest_Filter) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *ListSessionsRequest_Filter) GetIpAddr() string {
	if x != nil && x.IpAddr != nil {
		return *x.IpAddr
	}
	return ""
}

func (x *ListSessionsRequest_Filter) GetLastActiveBefore() *timestamp.Timestamp {
	if x != nil {
		return x.LastActiveBefore
	}
	return nil
}

func (x *ListSessionsRequest_Filter) GetLastActiveAfter() *timestamp.Timestamp {
	if x != nil {
		return x.LastActiveAfter
	}
	return nil
}

func (x *ListSessionsRequest_Filter) GetUpdatedBefore() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedBefore
	}
	return nil
}

func (x *ListSessionsRequest_Filter) GetUpdatedAfter() *timestamp.Timestamp {
	if x != nil {
		return x.UpdatedAfter
	}
	return nil
}

func (x *ListSessionsRequest_Filter) GetCreatedBefore() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedBefore
	}
	return nil
}

func (x *ListSessionsRequest_Filter) GetCreatedAfter() *timestamp.Timestamp {
	if x != nil {
		return x.CreatedAfter
	}
	return nil
}

var File_sessions_proto protoreflect.FileDescriptor

const file_sessions_proto_rawDesc = "" +
	"\n" +
	"\x0esessions.proto\x12\bsessions\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1egoogle/protobuf/duration.proto\"c\n" +
	"\x13StartSessionRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\x03R\x06userId\x124\n" +
	"\n" +
	"deviceInfo\x18\x04 \x01(\v2\x14.sessions.DeviceInfoR\n" +
	"deviceInfo\"\xd3\x02\n" +
	"\n" +
	"DeviceInfo\x124\n" +
	"\n" +
	"deviceType\x18\x01 \x01(\x0e2\x14.sessions.DeviceTypeR\n" +
	"deviceType\x12#\n" +
	"\n" +
	"deviceName\x18\x02 \x01(\tH\x00R\n" +
	"deviceName\x88\x01\x01\x12+\n" +
	"\aappType\x18\x03 \x01(\x0e2\x11.sessions.AppTypeR\aappType\x12\x1e\n" +
	"\n" +
	"appVersion\x18\x04 \x01(\tR\n" +
	"appVersion\x12\x0e\n" +
	"\x02os\x18\x05 \x01(\tR\x02os\x12!\n" +
	"\tosVersion\x18\x06 \x01(\tH\x01R\tosVersion\x88\x01\x01\x12%\n" +
	"\vdeviceModel\x18\a \x01(\tH\x02R\vdeviceModel\x88\x01\x01\x12\x16\n" +
	"\x06ipAddr\x18\b \x01(\tR\x06ipAddrB\r\n" +
	"\v_deviceNameB\f\n" +
	"\n" +
	"_osVersionB\x0e\n" +
	"\f_deviceModel\"N\n" +
	"\x14StartSessionResponse\x12\x1c\n" +
	"\tsessionID\x18\x01 \x01(\tR\tsessionID\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"2\n" +
	"\x12StopSessionRequest\x12\x1c\n" +
	"\tsessionID\x18\x01 \x01(\tR\tsessionID\"/\n" +
	"\x13StopSessionResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"\xf5\b\n" +
	"\x13ListSessionsRequest\x12<\n" +
	"\x06filter\x18\x01 \x01(\v2$.sessions.ListSessionsRequest.FilterR\x06filter\x1a\x9f\b\n" +
	"\x06Filter\x12\x1b\n" +
	"\x06userID\x18\x01 \x01(\x03H\x00R\x06userID\x88\x01\x01\x12#\n" +
	"\n" +
	"onlyActive\x18\x02 \x01(\bH\x01R\n" +
	"onlyActive\x88\x01\x01\x129\n" +
	"\n" +
	"deviceType\x18\x03 \x01(\x0e2\x14.sessions.DeviceTypeH\x02R\n" +
	"deviceType\x88\x01\x01\x12#\n" +
	"\n" +
	"deviceName\x18\x04 \x01(\tH\x03R\n" +
	"deviceName\x88\x01\x01\x120\n" +
	"\aappType\x18\x05 \x01(\x0e2\x11.sessions.AppTypeH\x04R\aappType\x88\x01\x01\x12#\n" +
	"\n" +
	"appVersion\x18\x06 \x01(\tH\x05R\n" +
	"appVersion\x88\x01\x01\x12\x13\n" +
	"\x02os\x18\a \x01(\tH\x06R\x02os\x88\x01\x01\x12!\n" +
	"\tosVersion\x18\b \x01(\tH\aR\tosVersion\x88\x01\x01\x12%\n" +
	"\vdeviceModel\x18\t \x01(\tH\bR\vdeviceModel\x88\x01\x01\x12\x1b\n" +
	"\x06ipAddr\x18\n" +
	" \x01(\tH\tR\x06ipAddr\x88\x01\x01\x12K\n" +
	"\x10lastActiveBefore\x18\v \x01(\v2\x1a.google.protobuf.TimestampH\n" +
	"R\x10lastActiveBefore\x88\x01\x01\x12I\n" +
	"\x0flastActiveAfter\x18\f \x01(\v2\x1a.google.protobuf.TimestampH\vR\x0flastActiveAfter\x88\x01\x01\x12E\n" +
	"\rupdatedBefore\x18\r \x01(\v2\x1a.google.protobuf.TimestampH\fR\rupdatedBefore\x88\x01\x01\x12C\n" +
	"\fupdatedAfter\x18\x0e \x01(\v2\x1a.google.protobuf.TimestampH\rR\fupdatedAfter\x88\x01\x01\x12E\n" +
	"\rcreatedBefore\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampH\x0eR\rcreatedBefore\x88\x01\x01\x12C\n" +
	"\fcreatedAfter\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampH\x0fR\fcreatedAfter\x88\x01\x01B\t\n" +
	"\a_userIDB\r\n" +
	"\v_onlyActiveB\r\n" +
	"\v_deviceTypeB\r\n" +
	"\v_deviceNameB\n" +
	"\n" +
	"\b_appTypeB\r\n" +
	"\v_appVersionB\x05\n" +
	"\x03_osB\f\n" +
	"\n" +
	"_osVersionB\x0e\n" +
	"\f_deviceModelB\t\n" +
	"\a_ipAddrB\x13\n" +
	"\x11_lastActiveBeforeB\x12\n" +
	"\x10_lastActiveAfterB\x10\n" +
	"\x0e_updatedBeforeB\x0f\n" +
	"\r_updatedAfterB\x10\n" +
	"\x0e_createdBeforeB\x0f\n" +
	"\r_createdAfter\"u\n" +
	"\x14ListSessionsResponse\x12-\n" +
	"\bsessions\x18\x01 \x03(\v2\x11.sessions.SessionR\bsessions\x12\x14\n" +
	"\x05count\x18\x02 \x01(\x05R\x05count\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\xcc\x05\n" +
	"\aSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06userID\x18\x02 \x01(\x03R\x06userID\x124\n" +
	"\n" +
	"deviceType\x18\x03 \x01(\x0e2\x14.sessions.DeviceTypeR\n" +
	"deviceType\x12#\n" +
	"\n" +
	"deviceName\x18\x04 \x01(\tH\x00R\n" +
	"deviceName\x88\x01\x01\x12+\n" +
	"\aappType\x18\x05 \x01(\x0e2\x11.sessions.AppTypeR\aappType\x12\x1e\n" +
	"\n" +
	"appVersion\x18\x06 \x01(\tR\n" +
	"appVersion\x12\x0e\n" +
	"\x02os\x18\a \x01(\tR\x02os\x12!\n" +
	"\tosVersion\x18\b \x01(\tH\x01R\tosVersion\x88\x01\x01\x12%\n" +
	"\vdeviceModel\x18\t \x01(\tH\x02R\vdeviceModel\x88\x01\x01\x12\x16\n" +
	"\x06ipAddr\x18\n" +
	" \x01(\tR\x06ipAddr\x12\x17\n" +
	"\x04city\x18\v \x01(\tH\x03R\x04city\x88\x01\x01\x12\x1d\n" +
	"\acountry\x18\f \x01(\tH\x04R\acountry\x88\x01\x01\x12\x1a\n" +
	"\bisActive\x18\r \x01(\bR\bisActive\x125\n" +
	"\blifetime\x18\x0e \x01(\v2\x19.google.protobuf.DurationR\blifetime\x12>\n" +
	"\flastActiveAt\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\flastActiveAt\x128\n" +
	"\tupdatedAt\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x128\n" +
	"\tcreatedAt\x18\x11 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAtB\r\n" +
	"\v_deviceNameB\f\n" +
	"\n" +
	"_osVersionB\x0e\n" +
	"\f_deviceModelB\a\n" +
	"\x05_cityB\n" +
	"\n" +
	"\b_country\"1\n" +
	"\x11GetSessionRequest\x12\x1c\n" +
	"\tsessionID\x18\x01 \x01(\tR\tsessionID\"[\n" +
	"\x12GetSessionResponse\x12+\n" +
	"\asession\x18\x01 \x01(\v2\x11.sessions.SessionR\asession\x12\x18\n" +
	"\aMessage\x18\x02 \x01(\tR\aMessage\"0\n" +
	"\x16StopAllSessionsRequest\x12\x16\n" +
	"\x06userID\x18\x01 \x01(\x03R\x06userID\"3\n" +
	"\x17StopAllSessionsResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage*:\n" +
	"\n" +
	"DeviceType\x12\a\n" +
	"\x03Web\x10\x00\x12\n" +
	"\n" +
	"\x06Mobile\x10\x01\x12\v\n" +
	"\aDesktop\x10\x02\x12\n" +
	"\n" +
	"\x06Tablet\x10\x03*W\n" +
	"\aAppType\x12\x0f\n" +
	"\vChesshubWeb\x10\x00\x12\x12\n" +
	"\x0eChesshubMobile\x10\x01\x12\x13\n" +
	"\x0fChesshubDesktop\x10\x02\x12\x12\n" +
	"\x0eChesshubTablet\x10\x032\xa6\x03\n" +
	"\x0fSessionsService\x12O\n" +
	"\fStartSession\x12\x1d.sessions.StartSessionRequest\x1a\x1e.sessions.StartSessionResponse\"\x00\x12L\n" +
	"\vStopSession\x12\x1c.sessions.StopSessionRequest\x1a\x1d.sessions.StopSessionResponse\"\x00\x12O\n" +
	"\fListSessions\x12\x1d.sessions.ListSessionsRequest\x1a\x1e.sessions.ListSessionsResponse\"\x00\x12I\n" +
	"\n" +
	"GetSession\x12\x1b.sessions.GetSessionRequest\x1a\x1c.sessions.GetSessionResponse\"\x00\x12X\n" +
	"\x0fStopAllSessions\x12 .sessions.StopAllSessionsRequest\x1a!.sessions.StopAllSessionsResponse\"\x00BlZjgithub.com/EugeneTsydenov/chesshub-user-service/internal/controllers/grpccontroller/genproto;sessionsprotob\x06proto3"

var (
	file_sessions_proto_rawDescOnce sync.Once
	file_sessions_proto_rawDescData []byte
)

func file_sessions_proto_rawDescGZIP() []byte {
	file_sessions_proto_rawDescOnce.Do(func() {
		file_sessions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sessions_proto_rawDesc), len(file_sessions_proto_rawDesc)))
	})
	return file_sessions_proto_rawDescData
}

var file_sessions_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sessions_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_sessions_proto_goTypes = []any{
	(DeviceType)(0),                    // 0: sessions.DeviceType
	(AppType)(0),                       // 1: sessions.AppType
	(*StartSessionRequest)(nil),        // 2: sessions.StartSessionRequest
	(*DeviceInfo)(nil),                 // 3: sessions.DeviceInfo
	(*StartSessionResponse)(nil),       // 4: sessions.StartSessionResponse
	(*StopSessionRequest)(nil),         // 5: sessions.StopSessionRequest
	(*StopSessionResponse)(nil),        // 6: sessions.StopSessionResponse
	(*ListSessionsRequest)(nil),        // 7: sessions.ListSessionsRequest
	(*ListSessionsResponse)(nil),       // 8: sessions.ListSessionsResponse
	(*Session)(nil),                    // 9: sessions.Session
	(*GetSessionRequest)(nil),          // 10: sessions.GetSessionRequest
	(*GetSessionResponse)(nil),         // 11: sessions.GetSessionResponse
	(*StopAllSessionsRequest)(nil),     // 12: sessions.StopAllSessionsRequest
	(*StopAllSessionsResponse)(nil),    // 13: sessions.StopAllSessionsResponse
	(*ListSessionsRequest_Filter)(nil), // 14: sessions.ListSessionsRequest.Filter
	(*duration.Duration)(nil),          // 15: google.protobuf.Duration
	(*timestamp.Timestamp)(nil),        // 16: google.protobuf.Timestamp
}
var file_sessions_proto_depIdxs = []int32{
	3,  // 0: sessions.StartSessionRequest.deviceInfo:type_name -> sessions.DeviceInfo
	0,  // 1: sessions.DeviceInfo.deviceType:type_name -> sessions.DeviceType
	1,  // 2: sessions.DeviceInfo.appType:type_name -> sessions.AppType
	14, // 3: sessions.ListSessionsRequest.filter:type_name -> sessions.ListSessionsRequest.Filter
	9,  // 4: sessions.ListSessionsResponse.sessions:type_name -> sessions.Session
	0,  // 5: sessions.Session.deviceType:type_name -> sessions.DeviceType
	1,  // 6: sessions.Session.appType:type_name -> sessions.AppType
	15, // 7: sessions.Session.lifetime:type_name -> google.protobuf.Duration
	16, // 8: sessions.Session.lastActiveAt:type_name -> google.protobuf.Timestamp
	16, // 9: sessions.Session.updatedAt:type_name -> google.protobuf.Timestamp
	16, // 10: sessions.Session.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 11: sessions.GetSessionResponse.session:type_name -> sessions.Session
	0,  // 12: sessions.ListSessionsRequest.Filter.deviceType:type_name -> sessions.DeviceType
	1,  // 13: sessions.ListSessionsRequest.Filter.appType:type_name -> sessions.AppType
	16, // 14: sessions.ListSessionsRequest.Filter.lastActiveBefore:type_name -> google.protobuf.Timestamp
	16, // 15: sessions.ListSessionsRequest.Filter.lastActiveAfter:type_name -> google.protobuf.Timestamp
	16, // 16: sessions.ListSessionsRequest.Filter.updatedBefore:type_name -> google.protobuf.Timestamp
	16, // 17: sessions.ListSessionsRequest.Filter.updatedAfter:type_name -> google.protobuf.Timestamp
	16, // 18: sessions.ListSessionsRequest.Filter.createdBefore:type_name -> google.protobuf.Timestamp
	16, // 19: sessions.ListSessionsRequest.Filter.createdAfter:type_name -> google.protobuf.Timestamp
	2,  // 20: sessions.SessionsService.StartSession:input_type -> sessions.StartSessionRequest
	5,  // 21: sessions.SessionsService.StopSession:input_type -> sessions.StopSessionRequest
	7,  // 22: sessions.SessionsService.ListSessions:input_type -> sessions.ListSessionsRequest
	10, // 23: sessions.SessionsService.GetSession:input_type -> sessions.GetSessionRequest
	12, // 24: sessions.SessionsService.StopAllSessions:input_type -> sessions.StopAllSessionsRequest
	4,  // 25: sessions.SessionsService.StartSession:output_type -> sessions.StartSessionResponse
	6,  // 26: sessions.SessionsService.StopSession:output_type -> sessions.StopSessionResponse
	8,  // 27: sessions.SessionsService.ListSessions:output_type -> sessions.ListSessionsResponse
	11, // 28: sessions.SessionsService.GetSession:output_type -> sessions.GetSessionResponse
	13, // 29: sessions.SessionsService.StopAllSessions:output_type -> sessions.StopAllSessionsResponse
	25, // [25:30] is the sub-list for method output_type
	20, // [20:25] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_sessions_proto_init() }
func file_sessions_proto_init() {
	if File_sessions_proto != nil {
		return
	}
	file_sessions_proto_msgTypes[1].OneofWrappers = []any{}
	file_sessions_proto_msgTypes[7].OneofWrappers = []any{}
	file_sessions_proto_msgTypes[12].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sessions_proto_rawDesc), len(file_sessions_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sessions_proto_goTypes,
		DependencyIndexes: file_sessions_proto_depIdxs,
		EnumInfos:         file_sessions_proto_enumTypes,
		MessageInfos:      file_sessions_proto_msgTypes,
	}.Build()
	File_sessions_proto = out.File
	file_sessions_proto_goTypes = nil
	file_sessions_proto_depIdxs = nil
}
