// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.12.4
// source: sessions.proto

package sessionsproto

import (
	_ "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DeviceType int32

const (
	DeviceType_Web     DeviceType = 0
	DeviceType_Mobile  DeviceType = 1
	DeviceType_Desktop DeviceType = 2
	DeviceType_Tablet  DeviceType = 3
)

// Enum value maps for DeviceType.
var (
	DeviceType_name = map[int32]string{
		0: "Web",
		1: "Mobile",
		2: "Desktop",
		3: "Tablet",
	}
	DeviceType_value = map[string]int32{
		"Web":     0,
		"Mobile":  1,
		"Desktop": 2,
		"Tablet":  3,
	}
)

func (x DeviceType) Enum() *DeviceType {
	p := new(DeviceType)
	*p = x
	return p
}

func (x DeviceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DeviceType) Descriptor() protoreflect.EnumDescriptor {
	return file_sessions_proto_enumTypes[0].Descriptor()
}

func (DeviceType) Type() protoreflect.EnumType {
	return &file_sessions_proto_enumTypes[0]
}

func (x DeviceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DeviceType.Descriptor instead.
func (DeviceType) EnumDescriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{0}
}

type AppType int32

const (
	AppType_ChesshubWeb     AppType = 0
	AppType_ChesshubMobile  AppType = 1
	AppType_ChesshubDesktop AppType = 2
	AppType_ChesshubTablet  AppType = 3
)

// Enum value maps for AppType.
var (
	AppType_name = map[int32]string{
		0: "ChesshubWeb",
		1: "ChesshubMobile",
		2: "ChesshubDesktop",
		3: "ChesshubTablet",
	}
	AppType_value = map[string]int32{
		"ChesshubWeb":     0,
		"ChesshubMobile":  1,
		"ChesshubDesktop": 2,
		"ChesshubTablet":  3,
	}
)

func (x AppType) Enum() *AppType {
	p := new(AppType)
	*p = x
	return p
}

func (x AppType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AppType) Descriptor() protoreflect.EnumDescriptor {
	return file_sessions_proto_enumTypes[1].Descriptor()
}

func (AppType) Type() protoreflect.EnumType {
	return &file_sessions_proto_enumTypes[1]
}

func (x AppType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AppType.Descriptor instead.
func (AppType) EnumDescriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{1}
}

type StartSessionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	DeviceInfo    *DeviceInfo            `protobuf:"bytes,4,opt,name=deviceInfo,proto3" json:"deviceInfo,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSessionRequest) Reset() {
	*x = StartSessionRequest{}
	mi := &file_sessions_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSessionRequest) ProtoMessage() {}

func (x *StartSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSessionRequest.ProtoReflect.Descriptor instead.
func (*StartSessionRequest) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{0}
}

func (x *StartSessionRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *StartSessionRequest) GetDeviceInfo() *DeviceInfo {
	if x != nil {
		return x.DeviceInfo
	}
	return nil
}

type DeviceInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DeviceType    DeviceType             `protobuf:"varint,1,opt,name=deviceType,proto3,enum=sessions.DeviceType" json:"deviceType,omitempty"`
	DeviceName    *string                `protobuf:"bytes,2,opt,name=deviceName,proto3,oneof" json:"deviceName,omitempty"`
	AppType       AppType                `protobuf:"varint,3,opt,name=appType,proto3,enum=sessions.AppType" json:"appType,omitempty"`
	AppVersion    string                 `protobuf:"bytes,4,opt,name=appVersion,proto3" json:"appVersion,omitempty"`
	Os            string                 `protobuf:"bytes,5,opt,name=os,proto3" json:"os,omitempty"`
	OsVersion     *string                `protobuf:"bytes,6,opt,name=osVersion,proto3,oneof" json:"osVersion,omitempty"`
	DeviceModel   *string                `protobuf:"bytes,7,opt,name=deviceModel,proto3,oneof" json:"deviceModel,omitempty"`
	IpAddr        string                 `protobuf:"bytes,8,opt,name=ipAddr,proto3" json:"ipAddr,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceInfo) Reset() {
	*x = DeviceInfo{}
	mi := &file_sessions_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceInfo) ProtoMessage() {}

func (x *DeviceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceInfo.ProtoReflect.Descriptor instead.
func (*DeviceInfo) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{1}
}

func (x *DeviceInfo) GetDeviceType() DeviceType {
	if x != nil {
		return x.DeviceType
	}
	return DeviceType_Web
}

func (x *DeviceInfo) GetDeviceName() string {
	if x != nil && x.DeviceName != nil {
		return *x.DeviceName
	}
	return ""
}

func (x *DeviceInfo) GetAppType() AppType {
	if x != nil {
		return x.AppType
	}
	return AppType_ChesshubWeb
}

func (x *DeviceInfo) GetAppVersion() string {
	if x != nil {
		return x.AppVersion
	}
	return ""
}

func (x *DeviceInfo) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *DeviceInfo) GetOsVersion() string {
	if x != nil && x.OsVersion != nil {
		return *x.OsVersion
	}
	return ""
}

func (x *DeviceInfo) GetDeviceModel() string {
	if x != nil && x.DeviceModel != nil {
		return *x.DeviceModel
	}
	return ""
}

func (x *DeviceInfo) GetIpAddr() string {
	if x != nil {
		return x.IpAddr
	}
	return ""
}

type StartSessionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionID     string                 `protobuf:"bytes,1,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartSessionResponse) Reset() {
	*x = StartSessionResponse{}
	mi := &file_sessions_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartSessionResponse) ProtoMessage() {}

func (x *StartSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sessions_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartSessionResponse.ProtoReflect.Descriptor instead.
func (*StartSessionResponse) Descriptor() ([]byte, []int) {
	return file_sessions_proto_rawDescGZIP(), []int{2}
}

func (x *StartSessionResponse) GetSessionID() string {
	if x != nil {
		return x.SessionID
	}
	return ""
}

func (x *StartSessionResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_sessions_proto protoreflect.FileDescriptor

const file_sessions_proto_rawDesc = "" +
	"\n" +
	"\x0esessions.proto\x12\bsessions\x1a\x1fgoogle/protobuf/timestamp.proto\"c\n" +
	"\x13StartSessionRequest\x12\x16\n" +
	"\x06userId\x18\x01 \x01(\x03R\x06userId\x124\n" +
	"\n" +
	"deviceInfo\x18\x04 \x01(\v2\x14.sessions.DeviceInfoR\n" +
	"deviceInfo\"\xd3\x02\n" +
	"\n" +
	"DeviceInfo\x124\n" +
	"\n" +
	"deviceType\x18\x01 \x01(\x0e2\x14.sessions.DeviceTypeR\n" +
	"deviceType\x12#\n" +
	"\n" +
	"deviceName\x18\x02 \x01(\tH\x00R\n" +
	"deviceName\x88\x01\x01\x12+\n" +
	"\aappType\x18\x03 \x01(\x0e2\x11.sessions.AppTypeR\aappType\x12\x1e\n" +
	"\n" +
	"appVersion\x18\x04 \x01(\tR\n" +
	"appVersion\x12\x0e\n" +
	"\x02os\x18\x05 \x01(\tR\x02os\x12!\n" +
	"\tosVersion\x18\x06 \x01(\tH\x01R\tosVersion\x88\x01\x01\x12%\n" +
	"\vdeviceModel\x18\a \x01(\tH\x02R\vdeviceModel\x88\x01\x01\x12\x16\n" +
	"\x06ipAddr\x18\b \x01(\tR\x06ipAddrB\r\n" +
	"\v_deviceNameB\f\n" +
	"\n" +
	"_osVersionB\x0e\n" +
	"\f_deviceModel\"N\n" +
	"\x14StartSessionResponse\x12\x1c\n" +
	"\tsessionID\x18\x01 \x01(\tR\tsessionID\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage*:\n" +
	"\n" +
	"DeviceType\x12\a\n" +
	"\x03Web\x10\x00\x12\n" +
	"\n" +
	"\x06Mobile\x10\x01\x12\v\n" +
	"\aDesktop\x10\x02\x12\n" +
	"\n" +
	"\x06Tablet\x10\x03*W\n" +
	"\aAppType\x12\x0f\n" +
	"\vChesshubWeb\x10\x00\x12\x12\n" +
	"\x0eChesshubMobile\x10\x01\x12\x13\n" +
	"\x0fChesshubDesktop\x10\x02\x12\x12\n" +
	"\x0eChesshubTablet\x10\x032b\n" +
	"\x0fSessionsService\x12O\n" +
	"\fStartSession\x12\x1d.sessions.StartSessionRequest\x1a\x1e.sessions.StartSessionResponse\"\x00BlZjgithub.com/EugeneTsydenov/chesshub-user-service/internal/controllers/grpccontroller/genproto;sessionsprotob\x06proto3"

var (
	file_sessions_proto_rawDescOnce sync.Once
	file_sessions_proto_rawDescData []byte
)

func file_sessions_proto_rawDescGZIP() []byte {
	file_sessions_proto_rawDescOnce.Do(func() {
		file_sessions_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_sessions_proto_rawDesc), len(file_sessions_proto_rawDesc)))
	})
	return file_sessions_proto_rawDescData
}

var file_sessions_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_sessions_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_sessions_proto_goTypes = []any{
	(DeviceType)(0),              // 0: sessions.DeviceType
	(AppType)(0),                 // 1: sessions.AppType
	(*StartSessionRequest)(nil),  // 2: sessions.StartSessionRequest
	(*DeviceInfo)(nil),           // 3: sessions.DeviceInfo
	(*StartSessionResponse)(nil), // 4: sessions.StartSessionResponse
}
var file_sessions_proto_depIdxs = []int32{
	3, // 0: sessions.StartSessionRequest.deviceInfo:type_name -> sessions.DeviceInfo
	0, // 1: sessions.DeviceInfo.deviceType:type_name -> sessions.DeviceType
	1, // 2: sessions.DeviceInfo.appType:type_name -> sessions.AppType
	2, // 3: sessions.SessionsService.StartSession:input_type -> sessions.StartSessionRequest
	4, // 4: sessions.SessionsService.StartSession:output_type -> sessions.StartSessionResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_sessions_proto_init() }
func file_sessions_proto_init() {
	if File_sessions_proto != nil {
		return
	}
	file_sessions_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_sessions_proto_rawDesc), len(file_sessions_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sessions_proto_goTypes,
		DependencyIndexes: file_sessions_proto_depIdxs,
		EnumInfos:         file_sessions_proto_enumTypes,
		MessageInfos:      file_sessions_proto_msgTypes,
	}.Build()
	File_sessions_proto = out.File
	file_sessions_proto_goTypes = nil
	file_sessions_proto_depIdxs = nil
}
