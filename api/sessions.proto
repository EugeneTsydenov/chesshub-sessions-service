syntax = "proto3";

package sessions;

option go_package = "github.com/EugeneTsydenov/chesshub-user-service/internal/controllers/grpccontroller/genproto;sessionsproto";

import "google/protobuf/timestamp.proto";

service SessionsService {
  rpc CreateSession(CreateSessionRequest) returns (CreateSessionResponse) {}
  rpc GetSessionById(GetSessionByIdRequest) returns (GetSessionByIdResponse) {}
  rpc GetSessions(GetSessionsRequest) returns (GetSessionsResponse) {}
  rpc UpdateSession(UpdateSessionRequest) returns (UpdateSessionResponse) {}
  rpc DeactivateSession(DeactivateSessionRequest) returns (DeactivateSessionResponse) {}
}

message CreateSessionRequest {
  int64 userId = 1;
  string ipAddress = 3;
  string deviceInfo = 4;
  google.protobuf.Timestamp expiredAt = 5;
}

message CreateSessionResponse {
  SessionData session = 1;
  string message = 2;
}

message SessionData {
  string id = 1;
  string ipAddress = 2;
  string deviceInfo = 3;
  bool isActive = 4;
  google.protobuf.Timestamp expiredAt = 5;
  google.protobuf.Timestamp updatedAt = 6;
  google.protobuf.Timestamp createdAt = 7;
}

message GetSessionByIdRequest {
  string id = 1;
}

message GetSessionByIdResponse {
  SessionData session = 1;
  string message = 2;
}

message GetSessionsRequest {
  map<string, string> filterMap = 2;
}

message GetSessionsResponse {
  repeated SessionData sessions = 1;
  string message = 2;
}

message UpdateSessionRequest {
  string sessionId = 1;
  map<string, string> fieldMap = 2;
}

message UpdateSessionResponse {
  SessionData session = 1;
  string message = 2;
}

message DeactivateSessionRequest {
  string sessionId = 1;
}

message DeactivateSessionResponse {
  bool success = 1;
  string message = 2;
}